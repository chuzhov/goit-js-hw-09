{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAYC,SAASC,cAAc,aACnCC,MAAYF,SAASC,cAAc,kBACnCE,KAAYH,SAASC,cAAc,iBACnCG,OAAYJ,SAASC,cAAc,mBACnCI,UAAYL,SAASC,cAAc,WAKrC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,GAAQ,GAE5BA,EAAM,G,CAXbJ,EAAKC,KAAKgB,iBAAiB,UAgB3B,SAA4BC,GAC1BA,EAAMC,iBACNnB,EAAKO,UAAUa,UAAW,EAE1B,IAAIC,EAAaC,OAAOC,SAASvB,EAAKI,MAAMoB,OACxCH,EAAa,IACdA,EAAa,EACbrB,EAAKI,MAAMoB,MAAQ,EACnB1B,EAAA2B,OAAOC,KAAK,oEAGf,IAAIC,EAAYL,OAAOtB,EAAKK,KAAKmB,OAC7BG,EAAY,IACdA,EAAY,EACZ7B,EAAA2B,OAAOC,KAAK,sEAGd,IAAIE,EAAiBN,OAAOtB,EAAKM,OAAOkB,OACpCI,EAAe,IACjBA,EAAiB,EACjB9B,EAAA2B,OAAOC,KAAK,qEAEVE,EAAiB,MACnBA,EAAiB,IACjB9B,EAAA2B,OAAOC,KAAK,iEAGdV,YAAW,KAAKhB,EAAKO,UAAUa,UAAW,CAAK,GAAGC,EAAaO,EAAiBD,GAEhF,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAgBC,IAAK,CAGxCrB,EAAcqB,EAFKR,EAAaQ,EAAIF,GAGjCG,MAAK,EAACrB,SAAEA,EAAQL,MAAEA,MACjBN,EAAA2B,OAAOM,QAAQ,uBAAqBtB,QAAiBL,gCAAoC,IAE1F4B,OAAM,EAACvB,SAAEA,EAAQL,MAAEA,MAClBN,EAAA2B,OAAOQ,QAAQ,sBAAoBxB,QAAeL,oCAAwC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form:       document.querySelector('form.form'),\n  delay:      document.querySelector('[name=\"delay\"]'),\n  step:       document.querySelector('[name=\"step\"]'),\n  amount:     document.querySelector('[name=\"amount\"]'),\n  submitBtn:  document.querySelector('button'),\n}\n\nrefs.form.addEventListener('submit', runPromiseCreation);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nfunction runPromiseCreation(event) {\n  event.preventDefault();\n  refs.submitBtn.disabled = true;\n\n  let delayValue = Number.parseInt(refs.delay.value);\n  if (delayValue < 4) {\n     delayValue = 4; \n     refs.delay.value = 4;\n     Notify.info(\"First delay should be longer than 3ms. Automatically corrected.\") \n  }\n\n  let delayStep = Number(refs.step.value);\n  if (delayStep < 4) {\n    delayStep = 4;\n    Notify.info(\"Step interval should be longer than 3ms. Automatically corrected.\");\n  }\n\n  let promisesAmount = Number(refs.amount.value);\n  if (promisesAmount<1) {\n    promisesAmount = 1;\n    Notify.info(\"Number of steps should be one at least. Automatically corrected.\");\n  }\n  if (promisesAmount > 100) {\n    promisesAmount = 100;\n    Notify.info(\"It's hard to fulfill so many promises! Let's cut them to 100\");\n  }\n\n  setTimeout(()=>{refs.submitBtn.disabled = false}, delayValue + promisesAmount * delayStep);\n\n  for (let i = 1; i <= promisesAmount; i++) {\n    let promiseDelay = delayValue + i * delayStep;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms. Making promises is easy!`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms. It's hard to take your word!`);\n      });\n  }\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","submitBtn","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","disabled","delayValue","Number","parseInt","value","Notify","info","delayStep","promisesAmount","i","then","success","catch","failure"],"version":3,"file":"03-promises.03191683.js.map"}